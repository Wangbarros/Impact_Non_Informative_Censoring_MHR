results_df = matrix(NA,nrow = 4,ncol = 6)
i = 1
for (pop in population){
results_df[i,] = colMeans(generate_data(0,0,2,2,pop,pop,10000))
i = i+1
}
for (pop in population){
results_df[i,] = colMeans(generate_data(0,0,2,2,pop,pop,10000))
i = i+1
}
population = c(3,5, 50, 200)
results_df = matrix(NA,nrow = length(population),ncol = 6)
results_df
i = 1
for (pop in population){
results_df[i,] = colMeans(generate_data(0,0,2,2,pop,pop,10000))
i = i+1
}
results_df
data.frame(results_df)
results_df
results_df = data.frame(results_df)
results_df
results_df
population = c(3,5, 50, 200)
results_df = matrix(NA,nrow = length(population),ncol = 6)
i = 1
for (pop in population){
results_df[i,] = colMeans(generate_data(0,0,2,2,pop,pop,10000))
i = i+1
}
for (pop in population){
results_df[i,] = colMeans(generate_data(0,0,2,2,pop,pop,10000))
i = i+1
}
population = c(3,5, 50, 200)
results_df = matrix(NA,nrow = length(population),ncol = 6)
i = 1
for (pop in population){
results_df[i,] = colMeans(generate_data(0,0,2,2,pop,pop,10000))
i = i+1
}
for (pop in population){
results_df[i,] = colMeans(generate_data(0,0,2,2,pop,pop,10000))
i = i+1
}
length(population)
population = c(3,5, 50, 200)
results_df = matrix(NA,nrow = length(population),ncol = 6)
results_df
population = c(3,5, 50, 200)
results_df = matrix(NA,nrow = length(population),ncol = 6)
i = 1
for (pop in population){
results_df[i,] = colMeans(generate_data(0,0,2,2,pop,pop,100))
i = i+1
}
results_df = as.data.frame(results_df)
names(results_df) = c()
results_df
population = c(3,5, 50, 200)
results_df = matrix(NA,nrow = length(population),ncol = 6)
i = 1
for (pop in population){
results_df[i,] = colMeans(generate_data(0,0,2,2,pop,pop,100))
i = i+1
}
results_df
results_df = as.data.frame(results_df)
results_df
as.data.frame(results_df)
results_df
rm(list=ls())
set.seed(12345)
knitr::opts_chunk$set(echo = TRUE)
mu_1 = 0
mu_2 = 0
sigma_1 = 2
sigma_2 = 2
n_1 = 3
n_2 = 3
S = 10
i = 1
generate_data = function(mu_1, mu_2, sigma_1, sigma_2, n_1, n_2, S) {
null_hypothesis = mu_1 == mu_2
results_df = matrix(NA, nrow = S, ncol = 6)
for (i in 1:S){
sample_1 = rnorm(n_1, mean = mu_1, sd = sigma_1)
sample_2 = rnorm(n_2, mean = mu_2, sd = sigma_2)
t_equal = t.test(sample_1, sample_2, var.equal = FALSE, conf.level = 0.95)
t_nequal = t.test(sample_1, sample_2, var.equal = TRUE, conf.level = 0.95)
t_equal_reject = t_equal$p.value < 0.05
t_nequal_reject = t_nequal$p.value < 0.05
t_equal_type1 = (t_equal_reject == TRUE) & (null_hypothesis == TRUE)
t_nequal_type1 = (t_nequal_reject == TRUE) & (null_hypothesis == TRUE)
t_equal_type2 = (t_equal_reject == FALSE) & (null_hypothesis == FALSE)
t_nequal_type2 = (t_nequal_reject == FALSE) & (null_hypothesis == FALSE)
results_df[i,1] = t_equal_type1
results_df[i,3] = t_nequal_type1
results_df[i,2] = !t_equal_type2 #power is avoiding a type 2, so we invert it
results_df[i,4] = !t_nequal_type2
wilcox_test = wilcox.test(sample_1, sample_2)
wilcox_reject = wilcox_test$p.value < 0.05
wilcox_type1 = (wilcox_reject == TRUE) & (null_hypothesis == TRUE)
wilcox_type2 = (wilcox_reject == FALSE) & (null_hypothesis == FALSE)
results_df[i,5] = wilcox_type1
results_df[i,6] = !wilcox_type2
}
results_df = as.data.frame(results_df)
names(results_df) = c('T_Equal_Size','T_Equal_Power','T_NEqual_Size','T_NEqual_Power',
'Wilcox_size','Wilcox_power')
return(results_df)
}
population = c(3,5, 50, 200)
results_df = matrix(NA,nrow = length(population),ncol = 6)
i = 1
for (pop in population){
results_df[i,] = colMeans(generate_data(0,0,2,2,pop,pop,100))
i = i+1
}
results_df
as.data.frame(results_df)
results_df = as.data.frame(results_df)
results_df
?as.data.frame
population = c(3,5, 50, 200)
results_df = matrix(NA,nrow = length(population),ncol = 6)
i = 1
for (pop in population){
results_df[i,] = colMeans(generate_data(0,0,2,2,pop,pop,100))
i = i+1
}
as.data.frame(results_df)
results_df
install.packages("MatchIt")
library(MatchIt)
install.packages('optmatch')
getRversion()
rm(list=ls())
library(Matching)
rm(list=ls())
library(Matching)
library(cobalt)
library(MatchIt)
library(doParallel)
library(doRNG)
library(rngtools)
library(survival)
#Need more reps
save_all = FALSE
lambda = 0.00002
eta = 2
do_balances = FALSE
random_treatment = FALSE
random_censoring = FALSE
change_info = FALSE
rep_min= 001
rep_max= rep_min+3
n_rep = rep_max-rep_min+1
seed = rep_max+rep_min
rng <- RNGseq(n_rep, rep_max+rep_min)
cl <- makeCluster(2)
registerDoParallel(cl)
cl <- makeCluster(2)
registerDoParallel(cl)
rm(list=ls())
library(Matching)
library(cobalt)
library(MatchIt)
library(doParallel)
library(doRNG)
library(rngtools)
library(survival)
#Need more reps
save_all = FALSE
lambda = 0.00002
eta = 2
do_balances = FALSE
random_treatment = FALSE
random_censoring = FALSE
change_info = FALSE
rep_min= 001
rep_max= rep_min+3
n_rep = rep_max-rep_min+1
seed = rep_max+rep_min
rng <- RNGseq(n_rep, rep_max+rep_min)
cl <- makeCluster(2)
cl <- makeCluster(2)
rm(list = ls())
setwd("~/Dropbox/Doktorand/Paper 1_5/Final_simple/Results")
setwd("D:/Dropbox/Doktorand/Paper 1_5/Final_simple/Results")
library(xtable)
final_table <- data.frame(
Method = character(), Censoring = numeric(), Bias = numeric(), SD = numeric(), RMSE = numeric(),
Rel.bias = numeric(), CP = numeric()
)
type_censoring <- "uniform" # uniform or weibull
counterfactual_text <- "notcounterfactual" # notcounterfactual or counterfactual
n <- 10000
rep <- 1000
target_beta <- 2
for (censoring_p in c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)) {
load(paste0(
counterfactual_text,
"_n", n, "rep", rep,
"_target", target_beta,
"_censoring", censoring_p,
"_censTYPE", type_censoring,
"_.RData"
))
final_list$res_table
row.names(final_list$res_table)[c(6, 8, 9)] <- c("IPTW_PEW", "PSM", "PSM_PEW")
final_list$res_table[c(5, 6, 8, 9), c(1, 2, 3, 4, 7)]
round(final_list$res_table, 2)
temp_table <- as.data.frame(final_list$res_table[c(5, 6, 8, 9), c(1, 2, 3, 4, 7)])
temp_table$Censoring <- censoring_p
temp_table$Method <- c("IPTW", "IPTW_PEW", "PSM", "PSM_PEW")
temp_table <- temp_table[, c(7, 6, 1, 2, 3, 4, 5)]
final_table <- rbind(final_table, temp_table)
}
#####
ltable <- print(xtable(final_table), include.rownames = FALSE)
ltable <- sub("IPTW & 0.10", "IPTW & \\multirow{4}{*}{0.1}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.20", "IPTW & \\multirow{4}{*}{0.2}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.30", "IPTW & \\multirow{4}{*}{0.3}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.40", "IPTW & \\multirow{4}{*}{0.4}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.50", "IPTW & \\multirow{4}{*}{0.5}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.60", "IPTW & \\multirow{4}{*}{0.6}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.70", "IPTW & \\multirow{4}{*}{0.7}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.80", "IPTW & \\multirow{4}{*}{0.8}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.90", "IPTW & \\multirow{4}{*}{0.9}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.95", "IPTW & \\multirow{4}{*}{0.95}", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.10", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.10", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.10", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.20", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.20", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.20", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.30", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.30", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.30", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.40", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.40", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.40", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.50", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.50", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.50", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.60", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.60", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.60", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.70", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.70", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.70", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.80", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.80", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.80", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.90", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.90", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.90", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.95", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.95", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.95", "PSM\\_PEW &", ltable, fixed = TRUE)
#####
cat(ltable)
final_list
row.names(final_list$res_table)[c(6, 8, 9)]
rm(list = ls())
setwd("~/Dropbox/Doktorand/Paper 1_5/Final_simple/Results")
setwd("D:/Dropbox/Doktorand/Paper 1_5/Final_simple/Results")
library(xtable)
final_table <- data.frame(
Method = character(), Censoring = numeric(), Bias = numeric(), SD = numeric(), RMSE = numeric(),
Rel.bias = numeric(), CP = numeric()
)
type_censoring <- "uniform" # uniform or weibull
counterfactual_text <- "notcounterfactual" # notcounterfactual or counterfactual
n <- 10000
rep <- 1000
target_beta <- 2
load(paste0(
counterfactual_text,
"_n", n, "rep", rep,
"_target", target_beta,
"_censoring", censoring_p,
"_censTYPE", type_censoring,
"_.RData"
))
final_list$res_table
censoring_p = 0.2
load(paste0(
counterfactual_text,
"_n", n, "rep", rep,
"_target", target_beta,
"_censoring", censoring_p,
"_censTYPE", type_censoring,
"_.RData"
))
final_list$res_table
row.names(final_list$res_table)[c(6, 8, 9)]
row.names(final_list$res_table)[c(6, 8, 9)] <- c("IPTW_PEW", "PSM", "PSM_PEW")
final_list$res_table[c(5, 6, 8, 9), c(1, 2, 3, 4, 7)]
round(final_list$res_table, 2)
temp_table <- as.data.frame(final_list$res_table[c(5, 6, 8, 9), c(1, 2, 3, 4, 7)])
temp_table$Censoring <- censoring_p
temp_table$Method <- c("IPTW", "IPTW_PEW", "PSM", "PSM_PEW")
temp_table
rm(list = ls())
setwd("~/Dropbox/Doktorand/Paper 1_5/Final_simple/Results")
setwd("D:/Dropbox/Doktorand/Paper 1_5/Final_simple/Results")
library(xtable)
final_table <- data.frame(
Method = character(), Censoring = numeric(), Bias = numeric(), SD = numeric(), RMSE = numeric(),
Rel.bias = numeric(), CP = numeric()
)
type_censoring <- "uniform" # uniform or weibull
counterfactual_text <- "counterfactual" # notcounterfactual or counterfactual
n <- 10000
rep <- 1000
target_beta <- 2
censoring_p = 0.2
load(paste0(
counterfactual_text,
"_n", n, "rep", rep,
"_target", target_beta,
"_censoring", censoring_p,
"_censTYPE", type_censoring,
"_.RData"
))
final_list$res_table
row.names(final_list$res_table)[c(6, 8, 9)] <- c("IPTW_PEW", "PSM", "PSM_PEW")
rm(list = ls())
setwd("~/Dropbox/Doktorand/Paper 1_5/Final_simple/Results")
setwd("D:/Dropbox/Doktorand/Paper 1_5/Final_simple/Results")
library(xtable)
final_table <- data.frame(
Method = character(), Censoring = numeric(), Bias = numeric(), SD = numeric(), RMSE = numeric(),
Rel.bias = numeric(), CP = numeric()
)
type_censoring <- "uniform" # uniform or weibull
counterfactual_text <- "counterfactual" # notcounterfactual or counterfactual
n <- 10000
rep <- 1000
target_beta <- 2
for (censoring_p in c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)) {
load(paste0(
counterfactual_text,
"_n", n, "rep", rep,
"_target", target_beta,
"_censoring", censoring_p,
"_censTYPE", type_censoring,
"_.RData"
))
final_list$res_table
row.names(final_list$res_table)[c(6, 8, 9)] <- c("IPTW_PEW", "PSM", "PSM_PEW")
final_list$res_table[c(5, 6, 8, 9), c(1, 2, 3, 4, 7)]
round(final_list$res_table, 2)
temp_table <- as.data.frame(final_list$res_table[c(5, 6, 8, 9), c(1, 2, 3, 4, 7)])
temp_table$Censoring <- censoring_p
temp_table$Method <- c("IPTW", "IPTW_PEW", "PSM", "PSM_PEW")
temp_table <- temp_table[, c(7, 6, 1, 2, 3, 4, 5)]
final_table <- rbind(final_table, temp_table)
}
#####
ltable <- print(xtable(final_table), include.rownames = FALSE)
ltable <- sub("IPTW & 0.10", "IPTW & \\multirow{4}{*}{0.1}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.20", "IPTW & \\multirow{4}{*}{0.2}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.30", "IPTW & \\multirow{4}{*}{0.3}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.40", "IPTW & \\multirow{4}{*}{0.4}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.50", "IPTW & \\multirow{4}{*}{0.5}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.60", "IPTW & \\multirow{4}{*}{0.6}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.70", "IPTW & \\multirow{4}{*}{0.7}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.80", "IPTW & \\multirow{4}{*}{0.8}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.90", "IPTW & \\multirow{4}{*}{0.9}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.95", "IPTW & \\multirow{4}{*}{0.95}", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.10", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.10", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.10", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.20", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.20", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.20", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.30", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.30", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.30", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.40", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.40", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.40", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.50", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.50", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.50", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.60", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.60", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.60", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.70", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.70", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.70", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.80", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.80", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.80", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.90", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.90", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.90", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.95", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.95", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.95", "PSM\\_PEW &", ltable, fixed = TRUE)
#####
cat(ltable)
rm(list = ls())
setwd("~/Dropbox/Doktorand/Paper 1_5/Final_simple/Results")
setwd("D:/Dropbox/Doktorand/Paper 1_5/Final_simple/Results")
library(xtable)
final_table <- data.frame(
Method = character(), Censoring = numeric(), Bias = numeric(), SD = numeric(), RMSE = numeric(),
Rel.bias = numeric(), CP = numeric()
)
type_censoring <- "uniform" # uniform or weibull
counterfactual_text <- "counterfactual" # notcounterfactual or counterfactual
n <- 10000
rep <- 1000
target_beta <- 2
for (censoring_p in c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)) {
load(paste0(
counterfactual_text,
"_n", n, "rep", rep,
"_target", target_beta,
"_censoring", censoring_p,
"_censTYPE", type_censoring,
"_.RData"
))
final_list$res_table
row.names(final_list$res_table)[c(6, 8, 9)] <- c("IPTW_PEW", "PSM", "PSM_PEW")
final_list$res_table[c(5, 6, 8, 9), c(1, 2, 3, 4, 7)]
round(final_list$res_table, 2)
temp_table <- as.data.frame(final_list$res_table[c(5, 6, 8, 9), c(1, 2, 3, 4, 7)])
temp_table$Censoring <- censoring_p
temp_table$Method <- c("IPTW", "IPTW_PEW", "PSM", "PSM_PEW")
temp_table <- temp_table[, c(7, 6, 1, 2, 3, 4, 5)]
final_table <- rbind(final_table, temp_table)
}
#####
ltable <- print(xtable(final_table), include.rownames = FALSE)
ltable <- sub("IPTW & 0.10", "IPTW & \\multirow{4}{*}{0.1}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.20", "IPTW & \\multirow{4}{*}{0.2}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.30", "IPTW & \\multirow{4}{*}{0.3}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.40", "IPTW & \\multirow{4}{*}{0.4}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.50", "IPTW & \\multirow{4}{*}{0.5}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.60", "IPTW & \\multirow{4}{*}{0.6}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.70", "IPTW & \\multirow{4}{*}{0.7}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.80", "IPTW & \\multirow{4}{*}{0.8}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.90", "IPTW & \\multirow{4}{*}{0.9}", ltable, fixed = TRUE)
ltable <- sub("IPTW & 0.95", "IPTW & \\multirow{4}{*}{0.95}", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.10", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.10", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.10", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.20", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.20", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.20", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.30", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.30", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.30", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.40", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.40", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.40", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.50", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.50", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.50", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.60", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.60", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.60", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.70", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.70", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.70", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.80", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.80", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.80", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.90", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.90", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.90", "PSM\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("IPTW\\_PEW & 0.95", "IPTW\\_PEW &", ltable, fixed = TRUE)
ltable <- sub("PSM & 0.95", "PSM &", ltable, fixed = TRUE)
ltable <- sub("PSM\\_PEW & 0.95", "PSM\\_PEW &", ltable, fixed = TRUE)
#####
cat(ltable)
rm(list=ls())
source("gen_surv_data_ATE_220823.R")
source("beta_bissection_ATE_JH.R")
source("marginal_beta_ATE_JH.R")
source("censor_data.R")
source("cox_reg_220823.R")
library(survival)
library(doParallel)
library(doRNG)
library(rngtools)
seed = 2355
n <- 2000 #Sample size
n_back = n
rep <- 1000 #Number of iterations
counterfactual = TRUE
censoring_p = 0.1
target_beta = 2
type_censoring = 'uniform'
counterfactual_text
counterfactual
counterfactual_text = 'notcounterfactual'
counterfactual
if(counterfactual == TRUE){
n <- n_back/2
counterfactual_text = 'counterfactual'
}
########################
datalist <- gen_surv_data_ATE(n = n, counterfactual = counterfactual, lambda = 0.00002, eta = 2, scenario = 'A',m = 1, k = 1,
marginal_hazard_ratio = target_beta, censoring_p = censoring_p, type_censoring = type_censoring)
source("gen_surv_data_ATE_220823.R")
